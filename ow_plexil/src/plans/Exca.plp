#include "plan-interface.h"


Exca:
{
	Boolean GroundDetectionSuccess=false;
	Boolean DiggingSuccess=false;
	Boolean TrenchReady=false;

	String OpOutcome;
	String PlanStatus;

	ExitCondition Lookup(TerminatePlan);

    Update checkpoint_type="Plan", checkpoint_name="Exca.plx", checkpoint_status=PLAN_STARTED;
	log_info ("[Excavation] starts");

	log_info ("{'sel_xloc': {'sci_val': 0.5322028060234025, 'position': {'y': 0.1, 'x': 1.75}, 'ex_prob': 0.787118877590639, 'name': 'xloc1'}, 'sel_dloc': {'position': {'y': -0.1, 'x': 1.94}, 'name': 'dloc6'}, 'node_name': 'Exca'}");

	log_info ("[Unstow] starts");
	LibraryCall Unstow();
	log_info ("[Unstow] finishes");

	GroundDetection:{
		Update checkpoint_type="Operation", checkpoint_name="GroundDetection", checkpoint_status=OP_STARTED;
		log_info ("[GroundDetection] starts: a guarded move to find out the ground position of the location (x=1.54, y=0.1)...");

		log_info("[GuardedMove] starts.");
		LibraryCall GuardedMove(
			X = 1.75, Y = 0.1, Z = 0.2,
			DirX = 0.1, DirY = 0.1, DirZ = 0.9,
			SearchDistance = 0.5);
		log_info("[GuardedMove] finishes.");
	}
	if (Lookup(GroundFound) && GroundDetection.outcome == SUCCESS) {
	    GroundDetectionSuccess=true;
		OpOutcome = OP_SUCCESS;
        log_info ("Detected ground position: ", Lookup(GroundPosition));
	}
	else {
		OpOutcome = OP_FAILURE;
	}
	Update checkpoint_type="Operation", checkpoint_name="GroundDetection", checkpoint_status=OpOutcome;
	log_info("[GroundDetection] ", OpOutcome);

	if (GroundDetectionSuccess) {
		Digging:{
			Update checkpoint_type="Operation", checkpoint_name="Digging", checkpoint_status=OP_STARTED;
			log_info ("[Digging] Starts");
			log_info ("Starting digging operation using the grind at {'sci_val': 0.5322028060234025, 'position': {'y': 0.1, 'x': 1.75}, 'ex_prob': 0.787118877590639, 'name': 'xloc1'}...");
			LibraryCall Grind (
				X = 1.75, Y = 0.1, Depth = 0.10,
				Length = 0.3, Parallel = false,
				GroundPos = Lookup(GroundPosition));
		}
		if (Digging.outcome == SUCCESS) {
		    DiggingSuccess = true;
			OpOutcome = OP_SUCCESS;
		}
		else {
			OpOutcome = OP_FAILURE;
		}
        Update checkpoint_type="Operation", checkpoint_name="Digging", checkpoint_status=OpOutcome;
		log_info ("[Digging] ", OpOutcome);

		if (DiggingSuccess) {
			TailingRemoval: {
				Update checkpoint_type="Operation", checkpoint_name="TailingRemoval", checkpoint_status=OP_STARTED;
				log_info ("[Tailing Removal] Starts");

				log_info ("Starts collecting the tailing using the scoop...\n");
				LibraryCall DigCircular (
					X = 1.75, Y = 0.1, Depth = 0.05,
					GroundPos = Lookup(GroundPosition),
					Parallel = false);

				log_info ("Moving the tailing to {'position': {'y': -0.1, 'x': 1.94}, 'name': 'dloc6'}");
				LibraryCall Deliver (X = 1.94, Y = -0.1, Z = 0.5);
			}
			if (TailingRemoval.outcome == SUCCESS) {
			    TrenchReady = true;
				OpOutcome = OP_SUCCESS;
			}
			else {
				OpOutcome = OP_FAILURE;
			}
			Update checkpoint_type="Operation", checkpoint_name="TailingRemoval", checkpoint_status=OpOutcome;
			log_info ("[TailingRemoval] ", OpOutcome);
		}
	}

    if (TrenchReady) {
      PlanStatus=PLAN_SUCCESS;
    } else {
      PlanStatus=PLAN_FAILURE;
    }
	Update checkpoint_type="Plan", checkpoint_name="Exca.plx", checkpoint_status=PlanStatus;
	log_info ("[Excavation] finishes");
}
